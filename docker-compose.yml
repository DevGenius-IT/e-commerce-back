services:
  api-gateway:
    build:
      context: .
      dockerfile: ./services/api-gateway/Dockerfile
    volumes:
      - ./services/api-gateway:/var/www/api-gateway
      - /var/www/api-gateway/vendor
    environment:
      - APP_ENV=local
      - CONTAINER_ROLE=app
    develop:
      watch:
        - action: sync
          path: services/api-gateway
          target: /var/www/api-gateway
          ignore:
            - vendor/
        - action: rebuild
          path: services/api-gateway/composer.json
    networks:
      - microservices-network

  auth-service:
    build:
      context: .
      dockerfile: ./services/auth-service/Dockerfile
    volumes:
      - ./services/auth-service:/var/www/auth-service
      - /var/www/auth-service/vendor
    environment:
      - APP_ENV=local
      - CONTAINER_ROLE=app
      - DB_HOST=${DB_AUTH_HOST}
    develop:
      watch:
        - action: sync
          path: services/auth-service
          target: /var/www/auth-service
          ignore:
            - vendor/
        - action: rebuild
          path: services/auth-service/composer.json
    networks:
      - microservices-network
    depends_on:
      - auth-db
      
  auth-db:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: auth_service_db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - ${DB_AUTH_PORT}:3306
    networks:
      - microservices-network

  messages-broker:
    build:
      context: .
      dockerfile: ./services/messages-broker/Dockerfile
    volumes:
      - ./services/messages-broker:/var/www/messages-broker
      - /var/www/messages-broker/vendor
    environment:
      - APP_ENV=local
      - CONTAINER_ROLE=app
      - DB_HOST=${DB_MESSAGES_BROKER_HOST}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    develop:
      watch:
        - action: sync
          path: services/messages-broker
          target: /var/www/messages-broker
          ignore:
            - vendor/
        - action: rebuild
          path: services/messages-broker/composer.json
    networks:
      - microservices-network
    depends_on:
      - messages-broker-db
      - rabbitmq

  messages-broker-db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: messages_broker
      MYSQL_ROOT_PASSWORD: root
    ports:
      - ${DB_MESSAGES_BROKER_PORT}:3306
    networks:
      - microservices-network

  addresses-service:
    build:
      context: .
      dockerfile: ./services/addresses-service/Dockerfile
    volumes:
      - ./services/addresses-service:/var/www/addresses-service
      - /var/www/addresses-service/vendor
    environment:
      - APP_ENV=local
      - CONTAINER_ROLE=app
      - DB_HOST=${DB_ADDRESSES_HOST}
    develop:
      watch:
        - action: sync
          path: services/addresses-service
          target: /var/www/addresses-service
          ignore:
            - vendor/
        - action: rebuild
          path: services/addresses-service/composer.json
    networks:
      - microservices-network
    depends_on:
      - addresses-db

  addresses-db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: addresses_service
      MYSQL_ROOT_PASSWORD: root
    ports:
      - ${DB_ADDRESSES_PORT}:3306
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - microservices-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"  # Pour HTTPS
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./services/api-gateway:/var/www/api-gateway
      - ./services/auth-service:/var/www/auth-service
      - ./services/addresses-service:/var/www/addresses-service
    develop:
      watch:
        - action: sync
          path: docker/nginx/conf.d
          target: /etc/nginx/conf.d
    networks:
      - microservices-network
    depends_on:
      - api-gateway
      - auth-service
      - addresses-service
      - messages-broker

volumes:
  auth-db-data:
  addresses-db-data:
  rabbitmq-data:

networks:
  microservices-network:
    driver: bridge